plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'  // .kotlin --> KTX: nav.action accepts param. ("it")
    id 'com.google.gms.google-services'
    id 'kotlinx-serialization'
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        testInstrumentationRunnerArguments
        testInstrumentationRunnerArguments
        testInstrumentationRunnerArguments
        testInstrumentationRunnerArguments
        testInstrumentationRunnerArguments
        testInstrumentationRunnerArguments
        applicationId "com.tanfra.shopmob"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs 'en'

        // FirebaseUI includes language support for all languages --> limit to English

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments.clearPackageData = "true"
        
        // read API key from environment variable "SMOB_NET_API_KEY"
        // ... see: https://medium.com/@alexzaitsev/how-to-move-password-to-system-environment-variables-and-load-it-with-gradle-837bc18e6c8f
        def smobNetApiKey = System.getenv("SMOB_NET_API_KEY")
        buildConfigField("String", "SMOB_NET_API_KEY", "\"${smobNetApiKey}\"")

        // network base URL
        // ... fake backend (emulator maps this to localhost@host)
        // ... production: BASE_URL = "https://shopmob.tanfra.com"
        buildConfigField "String", "BASE_URL", "\"http://10.0.2.2:3000\""
        //buildConfigField "String", "BASE_URL", "\"https://jp8rx9tjtg.execute-api.eu-central-1.amazonaws.com/dev/\""
    }

    testOptions {
        execution = "ANDROIDX_TEST_ORCHESTRATOR"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }

    // Enables data binding.
    buildFeatures {
        dataBinding true
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/licenses/**']
        }
        resources {
            excludes += ['**/attach_hotspot_windows.dll', 'META-INF/licenses/**', 'META-INF/AL2.0', 'META-INF/LGPL2.1']
        }
    }
    namespace 'com.tanfra.shopmob'

    // workaround to avoid build errors when running fragment-test dependent tests
    // https://www.codegrepper.com/code-examples/java/More+than+one+file+was+found+with+OS+independent+path+%27META-INF%2FAL2.0%27.+when+running+android+test

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    // serialization using kotlinx-serialization (avoids reflection [parcelize] and works with the
    // gradle "serialization" plugin (see above) --> does the "introspection" at compile time to
    // add possibly needed serializer code (for complex data structures)
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serializationVersion"

    // https://console.firebase.google.com/project/shopmob-335809/overview
    //
    // https://firebase.google.com/docs/android/setup
    // ... when using the BoM, you don't specify versions in the associated library dependencies
    implementation platform("com.google.firebase:firebase-bom:$firebaseBomVersion")
    implementation "com.google.firebase:firebase-common-ktx"
    implementation "com.google.firebase:firebase-storage-ktx"
    implementation "com.google.firebase:firebase-messaging-ktx"
    implementation "com.google.firebase:firebase-analytics-ktx"

    // use open source library firebaseui to simplify auth flows
    implementation "com.firebaseui:firebase-ui-auth:$firebaseUiVersion"

    // retrofit & moshi
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofitLoggingVersion"

    // loading an image from URL for display in ImageView
    implementation "io.coil-kt:coil:$coilVersion"

    // workManager
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    // App dependencies
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    implementation "androidx.annotation:annotation:$androidXAnnotations"

    implementation "androidx.cardview:cardview:$cardVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"

    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.activity:activity-ktx:$activityVersion"


    // Architecture Components
    // Navigation dependencies
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$archLifecycleVersion"
    //kapt "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleOldVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Room dependencies
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.4'
    kapt "androidx.room:room-compiler:2.4.2"

    // Coroutines Dependencies
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Koin
    implementation "io.insert-koin:koin-core:$koinVersion"
    implementation "io.insert-koin:koin-android:$koinVersion"

    //Maps & Geofencing
    implementation "com.google.android.gms:play-services-location:$playServicesLocationVersion"
    implementation "com.google.android.gms:play-services-maps:$playServicesMapsVersion"

    // Timber (logging)
    implementation "com.jakewharton.timber:timber:$timberVersion"


    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"    // liveData testing
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "io.insert-koin:koin-test:$koinVersion"
    testImplementation "io.insert-koin:koin-test-junit4:$koinVersion"

    // Test Orchestration
    androidTestImplementation('androidx.test:runner:1.4.0')
    androidTestUtil('androidx.test:orchestrator:1.4.1')
    androidTestImplementation('androidx.test.espresso:espresso-intents:3.4.0')

    // uiAutomator Testing
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiAutomatorVersion"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:rules:$androidXTestRulesVersion"


    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "org.robolectric:annotations:$robolectricVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "junit:junit:$junitVersion"

    // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    //implementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"
    //implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

    androidTestImplementation("io.insert-koin:koin-test:$koinVersion") { exclude group: 'org.mockito' }
    androidTestImplementation "io.insert-koin:koin-test-junit4:$koinVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"

}
